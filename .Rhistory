# Will replace with library(carsimr.<last_name>) so make sure your script
# is named properly! Note that this formulation implies that your package
# should be able to be installed without errors.
library(carsimr.rose)
# Check that non-square matrix properly formatted.
initial_grid <- initialize_grid(rho = 0.3, dims = c(3, 5), prob_blue = 0.5)
plot(initial_grid)
# Check all blue cars
initial_grid <- initialize_grid(rho = 0.5, dims = c(3, 5), prob_blue = 1)
plot(initial_grid)
# Check all red cars
initial_grid <- initialize_grid(rho = 0.5, dims = c(3, 5), prob_blue = 0)
plot(initial_grid)
# Check mostly blue cars and check integer rho
initial_grid <- initialize_grid(rho = 90, dims = c(10, 10), prob_blue = 0.9)
plot(initial_grid)
# Check mostly red cars and check integer rho
initial_grid <- initialize_grid(rho = 40, dims = c(10, 5), prob_blue = 0.1)
plot(initial_grid)
# Check that same initialization yield different grids each time.
initial_grid <- initialize_grid(rho = 0.999, dims = c(10, 5), prob_blue = 0.1)
plot(initial_grid)
initial_grid <- initialize_grid(rho = 0.999, dims = c(10, 5), prob_blue = 0.1)
plot(initial_grid)
initial_grid <- initialize_grid(rho = 0.999, dims = c(10, 5), prob_blue = 0.1)
plot(initial_grid)
# Check three different versions of moves.
check <- function(rho, dims, prob_blue, trials, pause){
init1 <- initialize_grid(rho, dims, prob_blue)
sim1 <- move_cars(init1, trials)
print(plot(sim1, pause = pause))
}
check(rho = 0.3, dims = c(10, 15), prob_blue = 0.9, trials = 5, pause = 0.1)
check(rho = 0.7, dims = c(15, 10), prob_blue = 0.1, trials = 5, pause = 0.1)
check(rho = 0.7, dims = c(10, 10), prob_blue = 0.5, trials = 5, pause = 0.1)
# Time one iteration using the mark function
initial_grid <- initialize_grid(rho = 0.35, dims = c(10, 10), prob_blue = 0.5)
temp <- bench::mark(move_cars(initial_grid, trials = 50), time_unit = "ms")
# Save time in a spreadsheet.
temp$median
